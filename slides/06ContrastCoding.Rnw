\documentclass[slidestop,compress,mathserif,red]{beamer}
%\documentclass[handout]{beamer}

%\usepackage{beamerthemesplit}
\usepackage{fancyvrb}
\usepackage{graphicx}
\usepackage{gb4e}
\usepackage{qtree}
\usepackage{hyperref}
\usepackage{ulem}

\usepackage{amsmath,amssymb,amsfonts}

\setbeamerfont{page number in head/foot}{size=\large}
\setbeamertemplate{footline}[frame number]

%\setbeamertemplate{footline}%
%{%
%\hfill\insertpagenumber\ of \ref{TotPages}\hspace{.5cm}\vspace{.5cm}
%\hfill\insertpagenumber\ of 28\hspace{.5cm}\vspace{.5cm}
%}%



\mode<presentation>
{
%\usetheme{Singapore}
%\usetheme{Berlin}

%\setbeamercovered{transparent}

}


%\mode<handout>
%{
%\usepackage{pgfpages}
%\pgfpagesuselayout{4 on 1}[a4paper,landscape,border shrink=5mm]
%}


\usetheme{Montpellier}
%\usecolortheme{beetle}
%\usecolortheme{seagull}
\usecolortheme{lily}

\title[Lecture 6]{Introduction to statistics: Contrast coding}

\author{Shravan Vasishth}

\institute{Universit\"at Potsdam\\
vasishth@uni-potsdam.de\\
http://www.ling.uni-potsdam.de/$\sim$vasishth
}

\date{\today}

\addtobeamertemplate{navigation symbols}{}{ \hspace{1em}    \usebeamerfont{footline}%
    \insertframenumber / \inserttotalframenumber }

\begin{document}
\maketitle



<<setup,include=FALSE,cache=FALSE>>=
library(knitr)
library(coda)
library(lme4)

library(xtable)
library(papaja)
#library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
#library(sjPlot)
library(png)
# set global chunk options, put figures into folder
options(replace.assign=TRUE,show.signif.stars=FALSE)
opts_chunk$set(fig.path='figures/figure-', fig.align='center', fig.show='hold')
options(replace.assign=TRUE,width=75)
opts_chunk$set(dev='postscript')
@

\section{Introduction}

\begin{frame}\frametitle{The goals of this lecture}

Goals of this  lecture:

\begin{itemize}
\item Understand contrast coding for two condition experiments.
\item Learn different (custom) contrast codings for more complex designs, such as $2\times 2$ factorial designs.
\end{itemize}


\end{frame}

\begin{frame}\frametitle{Typical experiment designs}

\begin{itemize}
\item Two conditions: $1\times 2$ ``factorial design''
\item Three conditions: $1\times 3$ ``factorial design''
\item Four  conditions: typically $2\times 2$ factorial design, sometimes $1\times 4$
\item More complex designs like $2\times 3$, $2\times 2\times 2$, etc.
\end{itemize}
\end{frame}

\begin{frame}\frametitle{Typical experiment designs}

\begin{itemize}
\item
We will not go beyond  $2\times 2$.
\item 
My  advice for your own work is to keep it simple: four conditions maximum.
\item Sometimes one has to go beyond such simple designs, but do that only if you really understand that you are introducing possibly intractable complexity in the design (this will be discussed later, lectures on simulating data).
\end{itemize}

\end{frame}

\begin{frame}\frametitle{Typical experiment designs}

\begin{itemize}
\item A classic beginner mistake (I have done this) is to design an experiment without any clear hypotheses in mind.
\item After the data come in, we start speculating and trying out different pairwise comparisons.
\item A better way: develop an analysis plan in advance using simulated data. This requires some mental discipline.
\item Define \textit{a priori} comparisons.
\item Pre-registration is a useful tool (to be discussed later).
\end{itemize}

\end{frame}

\begin{frame}[fragile]\frametitle{Generating simulated data}

We can generate between-subjects data using a function called mixedDesign.

<<>>=
library(dplyr)
# load mixedDesign function for simulating data
source("functions/mixedDesign.v0.6.3.R")
M <- matrix(c(0.8, 0.4), nrow=2, ncol=1, byrow=FALSE)
set.seed(1) 
# set seed of random number generator for replicability
@

\end{frame}


\begin{frame}[fragile]\frametitle{Generating simulated data}

\small
Generate between-subjects data:
<<>>=
simdat <- mixedDesign(B=2, W=NULL, n=5, 
                      M=M,  SD=.20, long = TRUE) 
t(xtabs(~id+B_A,simdat))
@

\end{frame}

\begin{frame}[fragile]\frametitle{Generating simulated data}

We can generate within-subjects data as well, but some changes to the function are needed:

\small
<<>>=
simdat_w <- mixedDesign(W=2, B=NULL, n=5, 
                      M=t(M),  SD=.20, long = TRUE)
t(xtabs(~id+W_a,simdat_w))
@

\end{frame}

\begin{frame}[fragile]\frametitle{Generating simulated data}

Using between-subjects simulated data here,  rename the columns:

<<>>=
names(simdat)[1] <- "F"  # Rename B_A to F(actor)
levels(simdat$F) <- c("F1", "F2")
head(simdat)
@

\end{frame}

\begin{frame}[fragile]\frametitle{Generating simulated data}

<<>>=
str(simdat)
@

\end{frame}


\begin{frame}[fragile]\frametitle{Generating simulated data}

<<>>=
table1 <- simdat %>% group_by(F) %>% 
  # Table for main effect F
   summarize(N=n(), M=mean(DV), 
             SD=sd(DV), SE=SD/sqrt(N) )
table1
@

<<>>=
(GM <-  mean(table1$M)) # Grand Mean
@

\end{frame}

\begin{frame}[fragile]\frametitle{Generating simulated data}

<<echo=FALSE,fig.height=4>>=
(plot1 <- qplot(x=F, y=M, group=1, data=table1, geom=c("point", "line")) + 
	 geom_errorbar(aes(max=M+SE, min=M-SE), width=0) + 
   #scale_y_continuous(breaks=c(250,275,300)) + 
   scale_y_continuous(breaks=seq(0,1,.2)) + coord_cartesian(ylim=c(0,1)) + 
   labs(y="Mean Response Time [sec]", x="Factor F") +
   theme_apa())
@
\end{frame}



\section{Treatment contrasts}

\begin{frame}[fragile]\frametitle{Treatment contrasts}

<<>>=
m_F <- lm(DV ~ F, simdat)
round(summary(m_F)$coef,3)
@

\begin{equation}
\begin{array}{lcl}
\text{Intercept} = & \hat{\mu}_1 & = \text{estimated mean for \texttt{F1}} \\
\text{Slope (\texttt{FF2})} = & \hat{\mu}_2 - \hat{\mu}_1 & = \text{estim. mean for \texttt{F2}} - \text{estim. mean for \texttt{F1}} 
\end{array}
\label{def:beta}
\end{equation}

\end{frame}

\begin{frame}[fragile]\frametitle{Treatment contrasts}

<<>>=
contrasts(simdat$F)
@

The \textsc{treatment contrast} expresses the null hypothesis that the difference in means between the two levels of the factor F is $0$; formally, the null hypothesis $H_0$ is that $H_0: \; \beta_1 = 0$:
\begin{equation}
H_0: - 1 \cdot \mu_{F1} + 1 \cdot \mu_{F2} = 0
\end{equation}

or equivalently:

\begin{equation} \label{eq:f2minusf1}
H_0: \mu_{F2} - \mu_{F1} = 0
\end{equation}

\end{frame}

\begin{frame}[fragile]\frametitle{Treatment contrasts}

The intercept in the \textsc{treatment contrast} expresses a null hypothesis that is usually of no interest: that the mean in condition F1 of the factor F is $0$.
Formally, the null hypothesis is $H_0: \; \beta_0 = 0$: 

\begin{equation} \label{eq:trmtcontrfirstmention}
H_0: 1 \cdot \mu_{F1} + 0 \cdot \mu_{F2} = 0
\end{equation}

\noindent
or equivalently:

\begin{equation}
H_0: \mu_{F1} = 0 .
\end{equation}


\end{frame}

\begin{frame}[fragile]\frametitle{Treatment contrasts}

Level-ordering is alphabetical and can be changed:

<<>>=
simdat$Fb <- factor(simdat$F,  levels = c("F2","F1"))
contrasts(simdat$Fb)
@

\end{frame}

\section{Sum contrasts}

\begin{frame}[fragile]\frametitle{Sum contrasts}

\small
<<>>=
(contrasts(simdat$F) <- c(-0.5,+0.5))
m1_mr <- lm(DV ~ F, simdat)
@

\end{frame}

\begin{frame}[fragile]\frametitle{Sum contrasts}


<<>>=
summary(m1_mr)
@

\end{frame}
\begin{frame}[fragile]\frametitle{Sum contrasts}

\begin{equation}
\begin{array}{lcl}
\text{Intercept} = & (\hat{\mu}_1 + \hat{\mu}_2)/2 & = \text{estimated mean of \texttt{F1} and \texttt{F2}} \\
\text{Slope (\texttt{F1})} = & \hat{\mu}_2 - \hat{\mu}_1 & = \text{est. mean for \texttt{F2}} - \text{estim. mean for \texttt{F1}} 
\end{array}
\label{def:beta2}
\end{equation}
\end{frame}

\begin{frame}[fragile]\frametitle{Sum contrasts}

Sum contrasts express the null hypothesis that the difference in means between the two levels of factor F is 0; formally, the null hypothesis $H_0$ is that 

\begin{equation}
H_0: -1 \cdot \mu_{F1} + 1 \cdot \mu_{F2} = 0
\end{equation}

\noindent
This is the same hypothesis that was also tested by the slope in the treatment contrast.

\end{frame}

\begin{frame}[fragile]\frametitle{Sum contrasts}


The intercept, however, now expresses a different hypothesis about the data: it expresses the null hypothesis that the average of the two conditions F1 and F2 is 0:

\begin{equation}
H_0: 1/2 \cdot \mu_{F1} + 1/2 \cdot \mu_{F2} = \frac{\mu_{F1} + \mu_{F2}}{2} = 0
\end{equation}

\end{frame}

\begin{frame}[fragile]\frametitle{Summary: Treatment and sum contrasts}

\begin{itemize}
\item
To summarize, \textsc{treatment contrasts} and \textsc{sum contrasts} are two possible ways to parameterize the difference between two groups; they test different hypotheses. 
\item
\textsc{Treatment contrasts} compare one or more means against a baseline condition, whereas \textsc{sum contrasts} allow us to determine whether we can reject the null hypothesis that a condition's mean is the same as the GM (in the two-group case, this also implies a hypothesis test that the two group means are the same).
\end{itemize}

\end{frame}

\section{Three-level factors}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}

<<>>=
M <- matrix(c(500, 450, 400), 
            nrow=3, ncol=1, byrow=FALSE)
set.seed(1)
simdat2 <- mixedDesign(B=3, W=NULL, 
                       n=4, M=M,  SD=20, long = TRUE) 
names(simdat2)[1] <- "F"  # Rename B_A to F(actor)/F(requency)
levels(simdat2$F) <- c("low", "medium", "high")
simdat2$DV <- round(simdat2$DV)
@

\end{frame}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}

<<>>=
head(simdat2)
table.word <- simdat2 %>% group_by(F) %>% 
  summarise(N = length(DV), M = mean(DV), 
            SD = sd(DV), SE = sd(DV)/sqrt(N))
@

\end{frame}


\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}

\tiny
<<>>=
table.word1 <- table.word
names(table.word1) <- c("Factor F","N data points","Estimated means",
                        "Standard deviations","Standard errors")
table.word1
@

\end{frame}

\begin{frame}[fragile]\frametitle{Generating simulated data}

<<echo=FALSE,fig.height=4>>=
(plot1 <- qplot(x=F, y=M, group=1, data=table.word, geom=c("point", "line")) + 
	 geom_errorbar(aes(max=M+SE, min=M-SE), width=0) + 
   #scale_y_continuous(breaks=c(250,275,300)) + 
   #scale_y_continuous(breaks=seq(0,1,.2)) + #coord_cartesian(ylim=c(0,1)) + 
   labs(y="Mean Response Time [sec]", x="Factor F") +
   theme_apa())
@
\end{frame}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}

The estimated means reflect our assumptions about the true means in the data simulation: Response times decrease with increasing word frequency. 

<<>>=
aovF <- aov(DV ~ F + Error(id), data=simdat2)
summary(aovF)
@

\end{frame}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}

Alternative syntax:
<<>>=
aovF2 <- aov(lm(DV ~ F, data=simdat2))
summary(aovF2)
@

\end{frame}


\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}

\begin{itemize}
\item
Notice that the ANOVA only tells that there is some difference, not which conditions are different from which.
\item
People often do an ANOVA and only if they find some difference do they do pairwise comparisons.
\item
But this two-step procedure is unnecessary; you can simply specify your hypotheses directly through contrast coding.
\end{itemize}
\end{frame}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}
\framesubtitle{Sum contrasts}

Define three hypotheses to test:

\begin{equation}
H_{0_0}: \frac{\mu_1 + \mu_2 + \mu_3}{3} = 0 
\end{equation}

\begin{equation}
H_{0_1}: \mu_1 = \frac{\mu_1+\mu_2+\mu_3}{3} = GM
\end{equation}

\noindent
and

\begin{equation}
H_{0_2}: \mu_2 = \frac{\mu_1+\mu_2+\mu_3}{3} = GM
\end{equation}


\end{frame}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}
\framesubtitle{Sum contrasts}

$H_{0_0}$ can be written as:

\begin{equation}
H_{0_0}: \frac{1}{3} \mu_1 + \frac{1}{3}\mu_2 + \frac{1}{3}\mu_3 = 0
\end{equation}

\end{frame}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}
\framesubtitle{Sum contrasts}

$H_{0_1}$ can be written as:

\begin{align} \label{h01}
& \mu_1 =\frac{\mu_1+\mu_2+\mu_3}{3}\\
\Leftrightarrow & \mu_1 - \frac{\mu_1+\mu_2+\mu_3}{3} = 0\\
\Leftrightarrow & \frac{2}{3} \mu_1 - \frac{1}{3}\mu_2 - \frac{1}{3}\mu_3 = 0
\end{align}

Here, the weights $2/3, -1/3, -1/3$ are informative about how to combine the condition means to define the null hypothesis.

\end{frame}

\begin{frame}[fragile]\frametitle{Example: simulated data with a three-level factor}
\framesubtitle{Sum contrasts}


$H_{0_2}$ can be rewritten as:

\begin{align}\label{h02}
&  \mu_2 = \frac{\mu_1+\mu_2+\mu_3}{3}\\
\Leftrightarrow & \mu_2 - \frac{\mu_1+\mu_2+\mu_3}{3} = 0 \\
\Leftrightarrow & -\frac{1}{3}\mu_1 + \frac{2}{3} \mu_2 - \frac{1}{3} \mu_3 = 0
\end{align}

Here, the weights are $-1/3, 2/3, -1/3$, and they again indicate how to combine the condition means for defining the null hypothesis.

\end{frame}

\section{The hypothesis matrix and the  contrast matrix}

\begin{frame}[fragile]\frametitle{The hypothesis matrix}

We can write the weights for the hypotheses in two columns  of a matrix:

<<>>=
HcSum <- rbind(cH00=c(low= 1/3, med= 1/3, hi= 1/3), 
               cH01=c(low=+2/3, med=-1/3, hi=-1/3), 
               cH02=c(low=-1/3, med=+2/3, hi=-1/3))
fractions(t(HcSum))
@


\end{frame}

\begin{frame}[fragile]\frametitle{The hypothesis matrix}

The generalized inverse (details require matrix algebra, see earlier lecture):

<<>>=
ginv2 <- function(x) 
  # define a function to make the output nicer
  fractions(provideDimnames(ginv(x),
                            base=dimnames(x)[2:1]))
@

\end{frame}

\begin{frame}[fragile]\frametitle{The hypothesis matrix}

Take the generalized inverse  of the hypothesis matrix:

\small
<<>>=
(XcSum <- ginv2(HcSum))
@

Compare the second  and third columns of the inverse of the hypothesis matrix with the sum contrast matrix:

<<>>=
contr.sum(3)
@
\end{frame}

\begin{frame}[fragile]\frametitle{The hypothesis matrix}

<<>>=
contrasts(simdat2$F) <- XcSum[,2:3]
## same as:
#contrasts(simdat2$F) <- contr.sum(3)
m1_mr <- lm(DV ~ F, data=simdat2)
@

\end{frame}

\begin{frame}[fragile]\frametitle{The hypothesis matrix}

Recall that in matrix form, the linear model is:

$DV = X\beta +\varepsilon$, where X is:

\tiny
<<>>=
head(round(model.matrix(m1_mr)))
@
\normalsize

You can see that the model or design matrix X is closely related to the generalized inverse of the hypothesis matrix.

Recall that $\hat\beta = (X^TX)^{-1}X^T Y$, and $(X^TX)^{-1}X^T=X^+$ is the generalized inverse of the design matrix.

\end{frame}

\begin{frame}[fragile]\frametitle{The hypothesis matrix}

\tiny
<<>>=
summary(m1_mr)
@

\end{frame}

\begin{frame}[fragile]\frametitle{The procedure}

From the hypothesis matrix to the contrast matrix:

\begin{itemize}
\item Write down the hypotheses
\item Extract the weights and write them into a \textbf{hypothesis matrix} as shown above
\item Apply the \textbf{generalized matrix inverse} to the hypothesis matrix to create the contrast matrix
\item Assign the contrast matrix (here, contr.sum(3)) to the factor and run the linear model
\end{itemize}

\end{frame}

\section{Repeated difference contrasts}

\begin{frame}[fragile]\frametitle{Repeated difference contrasts}

<<>>=
fractions(contr.sdif(3))
@

\end{frame}


\begin{frame}[fragile]\frametitle{Repeated difference contrasts}

Compares med to low, and high to low frequency.

<<>>=
## med vs low
table.word$M[2]-table.word$M[1]
## high vs med
table.word$M[3]-table.word$M[2]
@

\end{frame}

\begin{frame}[fragile]\frametitle{Repeated difference contrasts}

<<>>=
contrasts(simdat2$F) <- contr.sdif(3)
m1_mr <- lm(DV ~ F, data=simdat2)
summary(m1_mr)$coefficients
@

\end{frame}

\section{Two-by-two factorial designs}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}

<<>>=
set.seed(1)
M <- matrix(c(10, 20, 10, 40), nrow=4, ncol=1, byrow=FALSE)
simdat4 <- mixedDesign(B=c(2,2), W=NULL, 
                       n=5, M=M,  SD=10, 
                       long = TRUE) 
names(simdat4)[1:2] <- c("A","B")
@

\end{frame}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}

<<>>=
table4 <- simdat4 %>% group_by(A, B) %>% # plot interaction
    summarize(N=length(DV), 
              M=mean(DV), SD=sd(DV), SE=SD/sqrt(N))
GM <-  mean(table4$M) # Grand Mean

table4a <- table4
names(table4a) <- c("Factor A","Factor B",
                    "N data","Means",
                    "Std. dev.","Std. errors")
@

\end{frame}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}
\tiny
<<>>=
table4a
@

\end{frame}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}

<<echo=FALSE,fig.height=4>>=
(plot2 <- qplot(x=A, y=M, group=B, linetype=B, shape=B, data=table4, geom=c("point", "line")) + 
   labs(y="Dependent variable", x="Factor A", colour="Factor B", linetype="Factor B", shape="Factor B")+
	 geom_errorbar(aes(max=M+SE, min=M-SE), width=0) ) +theme_bw()
@

\end{frame}


\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}

\small
<<>>=
# ANOVA: B_A(2) times B_B(2)
m2_aov <- aov(lm(DV ~ A*B, data=simdat4))
summary(m2_aov)
@

\end{frame}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}
\small
<<>>=
# MR: B_A(2) times B_B(2)
m2_mr <- lm(DV ~ A*B, data=simdat4)
summary(m2_mr)$coefficients
@

The ANOVA and t-test output from the lm() function  do not match! Why not?
\end{frame}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}

The discrepancy between ANOVA and lm arises from the default treatment contrast coding in R, which lm uses but aov does not:

<<>>=
contrasts(simdat4$A)
contrasts(simdat4$B)
@

\end{frame}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}

ANOVA uses sum contrasts, and we can force lm to do this too:

<<>>=
# define sum contrasts:
contrasts(simdat4$A) <- contr.sum(2)
contrasts(simdat4$B) <- contr.sum(2)
m2_mr.sum <- lm(DV ~ A*B, data=simdat4)
summary(m2_mr.sum)$coefficients
@

\end{frame}

\section{Hypothesis matrices and contrast matrices using the hypr package}

\begin{frame}[fragile]\frametitle{Two-by-two factorial designs}

Read the hypr package vignette for examples on how to use it:

<<eval=FALSE>>=
library(hypr)
vignette("hypr-intro", package = "hypr")
vignette("hypr-regression", package = "hypr")
@

This package allows you to easy go from the hypothesis to contrast matrix and back.

\end{frame}

\section{How I use contrast coding}

\begin{frame}[fragile]\frametitle{How I use contrast coding}

\begin{itemize}
\item In my own work, I like experiment designs to be kept simple. $2\times 2\times 2$ is too complex for my taste.
\item However, sometimes complex designs are unavoidable. In that case, I generally set up sum contrasts for ANOVA-style analyses, or nested contrasts (or both).
\item Example of $2\times 2\times 2$ design: 

Lena A. Jäger, Daniela Mertzen, Julie A. Van Dyke, and Shravan Vasishth. Interference patterns in subject-verb agreement and reflexives revisited: A large-sample study. Journal of Memory and Language, 111, 2020.

https://osf.io/reavs/

\end{itemize}

\end{frame}

\begin{frame}[fragile]\frametitle{How I use contrast coding}

\begin{itemize}
\item
I never use the contr.sum() etc. functions. I define my own contrast coding columns in the design matrix.
\item
This becomes relevant in linear mixed models.
\end{itemize}

For example:

\end{frame}

\begin{frame}[fragile]\frametitle{How I use contrast coding}


<<>>=
persian<-read.table("data/Persiane1crit.txt")
xtabs(~dist+distance,persian)
xtabs(~pred+predability,persian)
@

\end{frame}


\begin{frame}[fragile]\frametitle{How I use contrast coding}


<<>>=
contrasts(persian$distance)<-contr.sum(2)
contrasts(persian$predability)<-contr.sum(2)
m<-lmer(rt~distance*predability+(1+distance*predability||subj)+
          (1+distance*predability||item),persian)
@

[Ignore the singularity warning for now]
\end{frame}

\begin{frame}[fragile]\frametitle{How I use contrast coding}


\tiny
Correlations should not have been computed:
<<>>=
summary(m)
@

\end{frame}

\begin{frame}[fragile]\frametitle{How I use contrast coding}

Using my own contrast coding vectors:

<<>>=
head(persian)
m2<-lmer(rt~dist*pred+(1+dist*pred||subj)+
           (1+dist*pred||item),persian)
@

\end{frame}

\begin{frame}[fragile]\frametitle{How I use contrast coding}
\tiny
Correlations are not computed, as expected:
<<>>=
summary(m2)
@

\end{frame}

\begin{frame}[fragile]\frametitle{How I use contrast coding}

\begin{itemize}
\item I prefer to define my own contrasts by hand because then I don't get spurious correlations in the random effects, as illustrated above.
\item As far as I know, it's not harmful to have those correlations. So maybe this is just a minor technical point.
\end{itemize}


\end{frame}



\section{Further details}

\begin{frame}\frametitle{To learn more}

Work through:

Daniel J. Schad, Shravan Vasishth, Sven Hohenstein, and Reinhold Kliegl. How to capitalize on a priori contrasts in linear (mixed) models: A tutorial. Journal of Memory and Language, 110, 2020.

\begin{itemize}
\item
This is a long and detailed paper, and should be read patiently, working through the examples. 
\item
To fully understand contrasts, you need to become familiar with the matrix formulation of the linear model (some passive matrix algebra knowledge is needed).
\end{itemize}
\end{frame}

\end{document}




